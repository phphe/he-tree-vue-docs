(window.webpackJsonp=window.webpackJsonp||[]).push([[40],{356:function(t,e,a){"use strict";a.r(e);var r=a(15),s=Object(r.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"api"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#api"}},[t._v("#")]),t._v(" API "),e("Badge",{attrs:{text:"v1"}})],1),t._v(" "),e("h2",{attrs:{id:"base-tree"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#base-tree"}},[t._v("#")]),t._v(" Base Tree")]),t._v(" "),e("h2",{attrs:{id:"props"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#props"}},[t._v("#")]),t._v(" props")]),t._v(" "),e("h3",{attrs:{id:"value"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#value"}},[t._v("#")]),t._v(" value")]),t._v(" "),e("ul",[e("li",[t._v("Type: "),e("a",{attrs:{href:"#treedata-2"}},[t._v("TreeData")]),t._v(", required")]),t._v(" "),e("li",[t._v("Detail: The data passed to tree.")]),t._v(" "),e("li",[t._v("Example: "),e("code",[t._v("[{text: 'node 1'}, {text: 'node 2', children: [{text: 'node 2-1'}]}]")])])]),t._v(" "),e("h3",{attrs:{id:"indent"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#indent"}},[t._v("#")]),t._v(" indent")]),t._v(" "),e("ul",[e("li",[t._v("Type: Number, default: 20")]),t._v(" "),e("li",[t._v("Detail: Indentation, unit is "),e("code",[t._v("px")]),t._v(".")])]),t._v(" "),e("h3",{attrs:{id:"rootnode"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#rootnode"}},[t._v("#")]),t._v(" rootNode")]),t._v(" "),e("ul",[e("li",[t._v("Type: "),e("a",{attrs:{href:"#node"}},[t._v("Node")]),t._v(", default: {}")]),t._v(" "),e("li",[t._v("Detail: The virtual root node of the tree. You can add options to root node by it.")])]),t._v(" "),e("h2",{attrs:{id:"data"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#data"}},[t._v("#")]),t._v(" data")]),t._v(" "),e("h3",{attrs:{id:"trees"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#trees"}},[t._v("#")]),t._v(" trees")]),t._v(" "),e("ul",[e("li",[t._v("Type: {tree._uid: tree}")]),t._v(" "),e("li",[t._v("Detail: All the tree's vm instance that currently exist.")])]),t._v(" "),e("h3",{attrs:{id:"treeclass"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#treeclass"}},[t._v("#")]),t._v(" treeClass")]),t._v(" "),e("ul",[e("li",[t._v("Type: String")]),t._v(" "),e("li",[t._v("Detail: Add class name to the top level of the tree. When using extends or mixins, you can customize the top level class without changing the template.")])]),t._v(" "),e("h3",{attrs:{id:"treeid"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#treeid"}},[t._v("#")]),t._v(" treeId")]),t._v(" "),e("ul",[e("li",[t._v("Type: String")]),t._v(" "),e("li",[t._v("Detail: Random string. Available after mounted.")])]),t._v(" "),e("h2",{attrs:{id:"computed"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#computed"}},[t._v("#")]),t._v(" computed")]),t._v(" "),e("h3",{attrs:{id:"treedata"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#treedata"}},[t._v("#")]),t._v(" treeData")]),t._v(" "),e("ul",[e("li",[t._v("Detail: Alias of "),e("a",{attrs:{href:"#value"}},[t._v("value")]),t._v(".")])]),t._v(" "),e("h2",{attrs:{id:"methods"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#methods"}},[t._v("#")]),t._v(" methods")]),t._v(" "),e("h3",{attrs:{id:"iteratepath"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#iteratepath"}},[t._v("#")]),t._v(" iteratePath")]),t._v(" "),e("ul",[e("li",[t._v("Type: (path: "),e("a",{attrs:{href:"#path"}},[t._v("Path")]),t._v(", [options: Object]) => Generator\n"),e("ul",[e("li",[t._v("options:\n"),e("ul",[e("li",[t._v("{Boolean} reverse")])])])])]),t._v(" "),e("li",[t._v("Detail: Iterate path.")]),t._v(" "),e("li",[t._v("Example:"),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("node"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" path"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("of")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("iteratePath")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("reverse")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])])]),t._v(" "),e("h3",{attrs:{id:"gettreevmbytreeel"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#gettreevmbytreeel"}},[t._v("#")]),t._v(" getTreeVmByTreeEl")]),t._v(" "),e("ul",[e("li",[t._v("Type: (treeEl: HTMLElement) => "),e("a",{attrs:{href:"#tree"}},[t._v("Tree")])]),t._v(" "),e("li",[t._v("Detail: Get vm by tree element.")])]),t._v(" "),e("h3",{attrs:{id:"getallnodesbypath"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#getallnodesbypath"}},[t._v("#")]),t._v(" getAllNodesByPath")]),t._v(" "),e("ul",[e("li",[t._v("Type: (path: "),e("a",{attrs:{href:"#path"}},[t._v("Path")]),t._v(") => "),e("a",{attrs:{href:"#node"}},[t._v("Node[]")])])]),t._v(" "),e("h3",{attrs:{id:"getnodebypath"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#getnodebypath"}},[t._v("#")]),t._v(" getNodeByPath")]),t._v(" "),e("ul",[e("li",[t._v("Type: (path: "),e("a",{attrs:{href:"#path"}},[t._v("Path")]),t._v(") => "),e("a",{attrs:{href:"#node"}},[t._v("Node")])])]),t._v(" "),e("h3",{attrs:{id:"getpathbybranchel"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#getpathbybranchel"}},[t._v("#")]),t._v(" getPathByBranchEl")]),t._v(" "),e("ul",[e("li",[t._v("Type: ("),e("a",{attrs:{href:"#tree-branch"}},[t._v("branchEl")]),t._v(": HTMLElement) => "),e("a",{attrs:{href:"#path"}},[t._v("Path")])])]),t._v(" "),e("h3",{attrs:{id:"getbranchelbypath"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#getbranchelbypath"}},[t._v("#")]),t._v(" getBranchElByPath")]),t._v(" "),e("ul",[e("li",[t._v("Type: (path: "),e("a",{attrs:{href:"#path"}},[t._v("Path")]),t._v(") => "),e("a",{attrs:{href:"#tree-branch"}},[t._v("branchEl")])])]),t._v(" "),e("h3",{attrs:{id:"getnodebybranchel"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#getnodebybranchel"}},[t._v("#")]),t._v(" getNodeByBranchEl")]),t._v(" "),e("ul",[e("li",[t._v("Type: ("),e("a",{attrs:{href:"#tree-branch"}},[t._v("branchEl")]),t._v(": HTMLElement) => "),e("a",{attrs:{href:"#node"}},[t._v("Node")])])]),t._v(" "),e("h3",{attrs:{id:"getnodeparentbypath"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#getnodeparentbypath"}},[t._v("#")]),t._v(" getNodeParentByPath")]),t._v(" "),e("ul",[e("li",[t._v("Type: (path: "),e("a",{attrs:{href:"#path"}},[t._v("Path")]),t._v(") => "),e("a",{attrs:{href:"#node"}},[t._v("Node")])])]),t._v(" "),e("h3",{attrs:{id:"removenodebypath"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#removenodebypath"}},[t._v("#")]),t._v(" removeNodeByPath")]),t._v(" "),e("ul",[e("li",[t._v("Type: (path: "),e("a",{attrs:{href:"#path"}},[t._v("Path")]),t._v(")")])]),t._v(" "),e("h3",{attrs:{id:"walktreedata"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#walktreedata"}},[t._v("#")]),t._v(" walkTreeData")]),t._v(" "),e("ul",[e("li",[t._v("Type: (handler, options) => "),e("a",{attrs:{href:"#walktreedata-2"}},[t._v("ut.walkTreeData(this.treeData, handler, options)")])]),t._v(" "),e("li",[t._v("Detail: Same with util but first argument is bound to treeData of the Tree.")])]),t._v(" "),e("h3",{attrs:{id:"clonetreedata"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#clonetreedata"}},[t._v("#")]),t._v(" cloneTreeData")]),t._v(" "),e("ul",[e("li",[t._v("Type: (options) => "),e("a",{attrs:{href:"#clonetreedata-2"}},[t._v("ut.cloneTreeData(this.treeData, options)")])]),t._v(" "),e("li",[t._v("Detail: Same with util but first argument is bound to treeData of the Tree.")])]),t._v(" "),e("h3",{attrs:{id:"getpuretreedata"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#getpuretreedata"}},[t._v("#")]),t._v(" getPureTreeData")]),t._v(" "),e("ul",[e("li",[t._v("Type: () => "),e("a",{attrs:{href:"#getpuretreedata-2"}},[t._v("ut.getPureTreeData(this.treeData)")])]),t._v(" "),e("li",[t._v("Detail: Same with util but first argument is bound to treeData of the Tree.")])]),t._v(" "),e("h2",{attrs:{id:"slots"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#slots"}},[t._v("#")]),t._v(" slots")]),t._v(" "),e("h3",{attrs:{id:"default-slot"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#default-slot"}},[t._v("#")]),t._v(" default slot")]),t._v(" "),e("ul",[e("li",[t._v("Type: scoped slot{node: "),e("a",{attrs:{href:"#node"}},[t._v("Node")]),t._v(", index: Number, path: "),e("a",{attrs:{href:"#path"}},[t._v("Path")]),t._v(", tree: "),e("a",{attrs:{href:"#tree"}},[t._v("Tree")]),t._v("}\n"),e("ul",[e("li",[t._v("index")])])]),t._v(" "),e("li",[t._v("Default:"),e("div",{pre:!0},[e("p",[e("code",[t._v("{{node.text}}")])])])]),t._v(" "),e("li",[t._v("Detail: Default slot, custom node render.")]),t._v(" "),e("li",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-html extra-class"},[e("pre",{pre:!0,attrs:{class:"language-html"}},[e("code",[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("v-slot")]),e("span",{pre:!0,attrs:{class:"token attr-value"}},[e("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("{node, index, path, tree}"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("{{node.title}}"),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),e("h2",{attrs:{id:"render-hooks"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#render-hooks"}},[t._v("#")]),t._v(" render hooks")]),t._v(" "),e("p",[t._v("Custom render. Applicable when using extends or mixins. Suitable for definition in data or methods.")]),t._v(" "),e("h3",{attrs:{id:"overrideslotdefault"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#overrideslotdefault"}},[t._v("#")]),t._v(" overrideSlotDefault")]),t._v(" "),e("ul",[e("li",[t._v("Type: ({node: "),e("a",{attrs:{href:"#node"}},[t._v("Node")]),t._v(", index: Number, path: "),e("a",{attrs:{href:"#path"}},[t._v("Path")]),t._v(", tree: "),e("a",{attrs:{href:"#tree"}},[t._v("Tree")]),t._v("}, original) => "),e("a",{attrs:{href:"#jsx"}},[t._v("JSX")]),t._v(" "),e("ul",[e("li",[t._v("{Function} original: return default render")])])]),t._v(" "),e("li",[t._v("Detail: Oerride "),e("a",{attrs:{href:"#default-slot"}},[t._v("default slot")]),t._v(". Custom node render.")]),t._v(" "),e("li",[t._v("Example:\n"),e("ul",[e("li",[t._v("Add button in the head and tail."),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("overrideSlotDefault")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("node"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" index"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" path"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" tree"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" original")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("div"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("button"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("before"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("button"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("original")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("button"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("after"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("button"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("div"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])]),t._v(" "),e("li",[t._v("Custom display text."),e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("overrideSlotDefault")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("node"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" index"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" path"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" tree"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" original")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("div"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("node"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("title"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("div"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])])])])]),t._v(" "),e("h3",{attrs:{id:"blockheader"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#blockheader"}},[t._v("#")]),t._v(" blockHeader")]),t._v(" "),e("ul",[e("li",[t._v("Type: () => "),e("a",{attrs:{href:"#jsx"}},[t._v("JSX")])]),t._v(" "),e("li",[t._v("Detail: Insert template to head.")])]),t._v(" "),e("h3",{attrs:{id:"blockfooter"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#blockfooter"}},[t._v("#")]),t._v(" blockFooter")]),t._v(" "),e("ul",[e("li",[t._v("Type: () => "),e("a",{attrs:{href:"#jsx"}},[t._v("JSX")])]),t._v(" "),e("li",[t._v("Detail: Insert template to end.")])]),t._v(" "),e("h2",{attrs:{id:"node-special-properties"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#node-special-properties"}},[t._v("#")]),t._v(" Node Special Properties")]),t._v(" "),e("p",[t._v("Special attributes of nodes in the base Tree.")]),t._v(" "),e("h3",{attrs:{id:"hidden"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#hidden"}},[t._v("#")]),t._v(" $hidden")]),t._v(" "),e("ul",[e("li",[t._v("Type: Boolean")]),t._v(" "),e("li",[t._v("Detail: Hide node.")])]),t._v(" "),e("h3",{attrs:{id:"xxxclass"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#xxxclass"}},[t._v("#")]),t._v(" $xxxClass")]),t._v(" "),e("ul",[e("li",[t._v("Type: String")]),t._v(" "),e("li",[t._v("Detail: Define the class of the HTML element. All: $branchClass, $nodeBackClass, $nodeClass, $childrenClass.")])]),t._v(" "),e("h3",{attrs:{id:"xxxstyle"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#xxxstyle"}},[t._v("#")]),t._v(" $xxxStyle")]),t._v(" "),e("ul",[e("li",[t._v("Type: [Object, String]")]),t._v(" "),e("li",[t._v("Detail: Define the style of the HTML element. All: $branchStyle, $nodeBackStyle, $nodeStyle, $childrenStyle.")])]),t._v(" "),e("h2",{attrs:{id:"static-methods"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#static-methods"}},[t._v("#")]),t._v(" Static Methods")]),t._v(" "),e("h3",{attrs:{id:"mixplugins"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#mixplugins"}},[t._v("#")]),t._v(" mixPlugins")]),t._v(" "),e("ul",[e("li",[t._v("Type: (plugins: Plugin[]) => VueComponent")]),t._v(" "),e("li",[t._v("Detail: Mix the base tree with the given plugin, returning new component.")])]),t._v(" "),e("h2",{attrs:{id:"fold-plugin"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fold-plugin"}},[t._v("#")]),t._v(" Fold Plugin")]),t._v(" "),e("h2",{attrs:{id:"props-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#props-2"}},[t._v("#")]),t._v(" props")]),t._v(" "),e("h3",{attrs:{id:"foldingtransitionname"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#foldingtransitionname"}},[t._v("#")]),t._v(" foldingTransitionName")]),t._v(" "),e("ul",[e("li",[t._v("Type: String")]),t._v(" "),e("li",[t._v("Detail: The transition name.")])]),t._v(" "),e("h3",{attrs:{id:"foldingtransition"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#foldingtransition"}},[t._v("#")]),t._v(" foldingTransition")]),t._v(" "),e("ul",[e("li",[t._v("Type: Vue")]),t._v(" "),e("li",[t._v("Detail: The transition component.")])]),t._v(" "),e("h3",{attrs:{id:"foldallaftermounted"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#foldallaftermounted"}},[t._v("#")]),t._v(" foldAllAfterMounted")]),t._v(" "),e("ul",[e("li",[t._v("Type: Boolean")]),t._v(" "),e("li",[t._v("Detail: Fold all nodes after mounted.")])]),t._v(" "),e("h2",{attrs:{id:"node-special-properties-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#node-special-properties-2"}},[t._v("#")]),t._v(" Node Special Properties")]),t._v(" "),e("p",[t._v("Special properties of nodes in this plugin.")]),t._v(" "),e("h3",{attrs:{id:"folded"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#folded"}},[t._v("#")]),t._v(" $folded")]),t._v(" "),e("ul",[e("li",[t._v("Type: Boolean")]),t._v(" "),e("li",[t._v("Detail: Whether the node is folded.")])]),t._v(" "),e("h2",{attrs:{id:"methods-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#methods-2"}},[t._v("#")]),t._v(" methods")]),t._v(" "),e("h3",{attrs:{id:"fold"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fold"}},[t._v("#")]),t._v(" fold")]),t._v(" "),e("ul",[e("li",[t._v("Type: (node: "),e("a",{attrs:{href:"#node"}},[t._v("Node")]),t._v(", path: "),e("a",{attrs:{href:"#path"}},[t._v("Path")]),t._v(")")]),t._v(" "),e("li",[t._v("Detail: Fold node.")])]),t._v(" "),e("h3",{attrs:{id:"unfold"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#unfold"}},[t._v("#")]),t._v(" unfold")]),t._v(" "),e("ul",[e("li",[t._v("Type: (node: "),e("a",{attrs:{href:"#node"}},[t._v("Node")]),t._v(", path: "),e("a",{attrs:{href:"#path"}},[t._v("Path")]),t._v(", [options: Object])\n"),e("ul",[e("li",[t._v("options:\n"),e("ul",[e("li",[t._v("foldOthers: false, Fold nodes in other branchs.")])])])])]),t._v(" "),e("li",[t._v("Detail: Unfold node.")])]),t._v(" "),e("h3",{attrs:{id:"togglefold"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#togglefold"}},[t._v("#")]),t._v(" toggleFold")]),t._v(" "),e("ul",[e("li",[t._v("Type: (node: "),e("a",{attrs:{href:"#node"}},[t._v("Node")]),t._v(", path: "),e("a",{attrs:{href:"#path"}},[t._v("Path")]),t._v(", [options: Object])\n"),e("ul",[e("li",[t._v("options: Passed to fold or unfold.")])])]),t._v(" "),e("li",[t._v("Detail: Toggle status.")])]),t._v(" "),e("h3",{attrs:{id:"foldall"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#foldall"}},[t._v("#")]),t._v(" foldAll")]),t._v(" "),e("ul",[e("li",[t._v("Type: () => undefined")])]),t._v(" "),e("h3",{attrs:{id:"unfoldall"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#unfoldall"}},[t._v("#")]),t._v(" unfoldAll")]),t._v(" "),e("ul",[e("li",[t._v("Type: () => undefined")])]),t._v(" "),e("h2",{attrs:{id:"events"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#events"}},[t._v("#")]),t._v(" events")]),t._v(" "),e("h3",{attrs:{id:"nodefoldedchanged"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#nodefoldedchanged"}},[t._v("#")]),t._v(" nodeFoldedChanged")]),t._v(" "),e("ul",[e("li",[t._v("Type: (node: "),e("a",{attrs:{href:"#node"}},[t._v("Node")]),t._v(")")]),t._v(" "),e("li",[t._v("Detail: Triggered when node is folded or unfolded.")])]),t._v(" "),e("h2",{attrs:{id:"check-plugin"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#check-plugin"}},[t._v("#")]),t._v(" Check Plugin")]),t._v(" "),e("h2",{attrs:{id:"methods-3"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#methods-3"}},[t._v("#")]),t._v(" methods")]),t._v(" "),e("h3",{attrs:{id:"check"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#check"}},[t._v("#")]),t._v(" check")]),t._v(" "),e("ul",[e("li",[t._v("Type: (node: "),e("a",{attrs:{href:"#node"}},[t._v("Node")]),t._v(", path: "),e("a",{attrs:{href:"#path"}},[t._v("Path")]),t._v(")")])]),t._v(" "),e("h3",{attrs:{id:"uncheck"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#uncheck"}},[t._v("#")]),t._v(" uncheck")]),t._v(" "),e("ul",[e("li",[t._v("Type: (node: "),e("a",{attrs:{href:"#node"}},[t._v("Node")]),t._v(", path: "),e("a",{attrs:{href:"#path"}},[t._v("Path")]),t._v(")")])]),t._v(" "),e("h3",{attrs:{id:"togglecheck"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#togglecheck"}},[t._v("#")]),t._v(" toggleCheck")]),t._v(" "),e("ul",[e("li",[t._v("Type: (node: "),e("a",{attrs:{href:"#node"}},[t._v("Node")]),t._v(", path: "),e("a",{attrs:{href:"#path"}},[t._v("Path")]),t._v(")")])]),t._v(" "),e("h2",{attrs:{id:"draggable-plugin"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#draggable-plugin"}},[t._v("#")]),t._v(" Draggable Plugin")]),t._v(" "),e("h2",{attrs:{id:"props-3"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#props-3"}},[t._v("#")]),t._v(" props")]),t._v(" "),e("h3",{attrs:{id:"triggerclass"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#triggerclass"}},[t._v("#")]),t._v(" triggerClass")]),t._v(" "),e("ul",[e("li",[t._v("Type: String, default: 'tree-node'")]),t._v(" "),e("li",[t._v("Detail: "),e("code",[t._v("class")]),t._v(" of the element which trigger drag.")])]),t._v(" "),e("h3",{attrs:{id:"draggable"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#draggable"}},[t._v("#")]),t._v(" draggable")]),t._v(" "),e("ul",[e("li",[t._v("Type: [Boolean, (tree: "),e("a",{attrs:{href:"#tree"}},[t._v("Tree")]),t._v(", store: "),e("a",{attrs:{href:"#store"}},[t._v("Store")]),t._v(") => "),e("a",{attrs:{href:"#isdraggable"}},[t._v("IsDraggable")]),t._v("], default: true")]),t._v(" "),e("li",[t._v("Detail: Enable drag.")])]),t._v(" "),e("h3",{attrs:{id:"droppable"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#droppable"}},[t._v("#")]),t._v(" droppable")]),t._v(" "),e("ul",[e("li",[t._v("Type: [Boolean, (tree: "),e("a",{attrs:{href:"#tree"}},[t._v("Tree")]),t._v(", store: "),e("a",{attrs:{href:"#store"}},[t._v("Store")]),t._v(") => "),e("a",{attrs:{href:"#isdroppable"}},[t._v("IsDroppable")]),t._v("], default: true")]),t._v(" "),e("li",[t._v("Detail: Enable drop.")])]),t._v(" "),e("h3",{attrs:{id:"eachdraggable"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#eachdraggable"}},[t._v("#")]),t._v(" eachDraggable")]),t._v(" "),e("ul",[e("li",[t._v("Type: [undefined, Boolean, Function]\n"),e("ul",[e("li",[t._v("undefined: Inherit parent")]),t._v(" "),e("li",[t._v("Function: (currentPath: "),e("a",{attrs:{href:"#path"}},[t._v("Path")]),t._v(", tree: "),e("a",{attrs:{href:"#tree"}},[t._v("Tree")]),t._v(", store: "),e("a",{attrs:{href:"#store"}},[t._v("Store")]),t._v(") => "),e("a",{attrs:{href:"#isdraggable"}},[t._v("IsDraggable")])])])]),t._v(" "),e("li",[t._v("Detail: Whether a single node is draggable.")])]),t._v(" "),e("h3",{attrs:{id:"eachdroppable"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#eachdroppable"}},[t._v("#")]),t._v(" eachDroppable")]),t._v(" "),e("ul",[e("li",[t._v("Type: [undefined, Boolean, Function]\n"),e("ul",[e("li",[t._v("undefined: Inherit parent")]),t._v(" "),e("li",[t._v("Function: (currentPath: "),e("a",{attrs:{href:"#path"}},[t._v("Path")]),t._v(", tree: "),e("a",{attrs:{href:"#tree"}},[t._v("Tree")]),t._v(", store: "),e("a",{attrs:{href:"#store"}},[t._v("Store")]),t._v(") => "),e("a",{attrs:{href:"#isdroppable"}},[t._v("IsDroppable")])])])]),t._v(" "),e("li",[t._v("Detail: Whether a single node is droppable.")])]),t._v(" "),e("h3",{attrs:{id:"ondragstart"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ondragstart"}},[t._v("#")]),t._v(" ondragstart")]),t._v(" "),e("ul",[e("li",[t._v("Type: (tree: "),e("a",{attrs:{href:"#tree"}},[t._v("Tree")]),t._v(", store: "),e("a",{attrs:{href:"#store"}},[t._v("Store")]),t._v(") => Boolean")]),t._v(" "),e("li",[t._v("Detail: Hook, whether to prevent drag.")])]),t._v(" "),e("h3",{attrs:{id:"ondragend"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ondragend"}},[t._v("#")]),t._v(" ondragend")]),t._v(" "),e("ul",[e("li",[t._v("Type: (tree: "),e("a",{attrs:{href:"#tree"}},[t._v("Tree")]),t._v(", store: "),e("a",{attrs:{href:"#store"}},[t._v("Store")]),t._v(") => Boolean")]),t._v(" "),e("li",[t._v("Detail: Hook, whether to prevent the drag result.")])]),t._v(" "),e("h3",{attrs:{id:"unfoldwhendragover"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#unfoldwhendragover"}},[t._v("#")]),t._v(" unfoldWhenDragover")]),t._v(" "),e("ul",[e("li",[t._v("Type: Boolean, default: true")]),t._v(" "),e("li",[t._v("Detail: When dragging over a node, whether to open it if the node is folded.")])]),t._v(" "),e("h3",{attrs:{id:"unfoldwhendragoverdelay"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#unfoldwhendragoverdelay"}},[t._v("#")]),t._v(" unfoldWhenDragoverDelay")]),t._v(" "),e("ul",[e("li",[t._v("Type: Number, default: 30, unit: millisecond")]),t._v(" "),e("li",[t._v("Detail: When dragging over a folded node, wait some milliseconds before open it.")])]),t._v(" "),e("h3",{attrs:{id:"draggingnodepositionmode"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#draggingnodepositionmode"}},[t._v("#")]),t._v(" draggingNodePositionMode")]),t._v(" "),e("ul",[e("li",[t._v("Type: 'top_left_corner'|'mouse', default: 'top_left_corner'")]),t._v(" "),e("li",[t._v("Detail: How to locate the dragging node. top_left_corner: the top left corner of dragging node; mouse: mouse position")])]),t._v(" "),e("h3",{attrs:{id:"crosstree"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#crosstree"}},[t._v("#")]),t._v(" crossTree "),e("Badge",{attrs:{text:"pro"}})],1),t._v(" "),e("ul",[e("li",[t._v("Type: [Boolean, Function], default: false\n"),e("ul",[e("li",[t._v("Function: (tree: "),e("a",{attrs:{href:"#tree"}},[t._v("Tree")]),t._v(", store: "),e("a",{attrs:{href:"#store"}},[t._v("Store")]),t._v(") => Boolean")])])]),t._v(" "),e("li",[t._v("Detail: Whether to allow cross trees. This must be enabled for both start tree and target tree.")])]),t._v(" "),e("h3",{attrs:{id:"maxlevel"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#maxlevel"}},[t._v("#")]),t._v(" maxLevel "),e("Badge",{attrs:{text:"pro"}})],1),t._v(" "),e("ul",[e("li",[t._v("Type: Number")]),t._v(" "),e("li",[t._v("Detail: The maximum number of levels allowed by the tree. It determines whether node can be placed when drag.")])]),t._v(" "),e("h3",{attrs:{id:"clonewhendrag"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#clonewhendrag"}},[t._v("#")]),t._v(" cloneWhenDrag "),e("Badge",{attrs:{text:"pro"}})],1),t._v(" "),e("ul",[e("li",[t._v("Type: Boolean, default: false")]),t._v(" "),e("li",[t._v("Detail: Clone node when drag.")])]),t._v(" "),e("h2",{attrs:{id:"methods-4"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#methods-4"}},[t._v("#")]),t._v(" methods")]),t._v(" "),e("h3",{attrs:{id:"isnodedraggable"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#isnodedraggable"}},[t._v("#")]),t._v(" isNodeDraggable")]),t._v(" "),e("ul",[e("li",[t._v("Type: (node: "),e("a",{attrs:{href:"#node"}},[t._v("Node")]),t._v(", path: "),e("a",{attrs:{href:"#path"}},[t._v("Path")]),t._v(") => Boolean")])]),t._v(" "),e("h3",{attrs:{id:"isnodedroppable"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#isnodedroppable"}},[t._v("#")]),t._v(" isNodeDroppable")]),t._v(" "),e("ul",[e("li",[t._v("Type: (node: "),e("a",{attrs:{href:"#node"}},[t._v("Node")]),t._v(", path: "),e("a",{attrs:{href:"#path"}},[t._v("Path")]),t._v(") => Boolean")])]),t._v(" "),e("h2",{attrs:{id:"node-special-properties-3"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#node-special-properties-3"}},[t._v("#")]),t._v(" Node Special Properties")]),t._v(" "),e("p",[t._v("Special properties of nodes in this plugin.")]),t._v(" "),e("h3",{attrs:{id:"draggable-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#draggable-2"}},[t._v("#")]),t._v(" $draggable")]),t._v(" "),e("ul",[e("li",[t._v("Type: [undefined, Boolean, Function]\n"),e("ul",[e("li",[t._v("undefined: Inherit parent")]),t._v(" "),e("li",[t._v("Function: (currentPath: "),e("a",{attrs:{href:"#path"}},[t._v("Path")]),t._v(", tree: "),e("a",{attrs:{href:"#tree"}},[t._v("Tree")]),t._v(", store: "),e("a",{attrs:{href:"#store"}},[t._v("Store")]),t._v(") => "),e("a",{attrs:{href:"#isdroppable"}},[t._v("IsDroppable")])])])]),t._v(" "),e("li",[t._v("Detail: Whether a single node is draggable.")])]),t._v(" "),e("h3",{attrs:{id:"droppable-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#droppable-2"}},[t._v("#")]),t._v(" $droppable")]),t._v(" "),e("ul",[e("li",[t._v("Type: [undefined, Boolean, Function]\n"),e("ul",[e("li",[t._v("undefined: Inherit parent")]),t._v(" "),e("li",[t._v("Function: (currentPath: "),e("a",{attrs:{href:"#path"}},[t._v("Path")]),t._v(", tree: "),e("a",{attrs:{href:"#tree"}},[t._v("Tree")]),t._v(", store: "),e("a",{attrs:{href:"#store"}},[t._v("Store")]),t._v(") => "),e("a",{attrs:{href:"#isdroppable"}},[t._v("IsDroppable")])])])]),t._v(" "),e("li",[t._v("Detail: Whether a single node is droppable.")])]),t._v(" "),e("h2",{attrs:{id:"events-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#events-2"}},[t._v("#")]),t._v(" events")]),t._v(" "),e("h3",{attrs:{id:"drag"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#drag"}},[t._v("#")]),t._v(" drag")]),t._v(" "),e("ul",[e("li",[t._v("Type: (store: "),e("a",{attrs:{href:"#store"}},[t._v("Store")]),t._v(")")])]),t._v(" "),e("h3",{attrs:{id:"drop"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#drop"}},[t._v("#")]),t._v(" drop")]),t._v(" "),e("ul",[e("li",[t._v("Type: (store: "),e("a",{attrs:{href:"#store"}},[t._v("Store")]),t._v(")")])]),t._v(" "),e("h3",{attrs:{id:"input"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#input"}},[t._v("#")]),t._v(" input")]),t._v(" "),e("ul",[e("li",[t._v("Type: (treeData: "),e("a",{attrs:{href:"#treedata"}},[t._v("TreeData")]),t._v(")")])]),t._v(" "),e("h3",{attrs:{id:"change"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#change"}},[t._v("#")]),t._v(" change")]),t._v(" "),e("ul",[e("li",[t._v("Type: ()")])]),t._v(" "),e("h3",{attrs:{id:"afterplaceholdercreated"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#afterplaceholdercreated"}},[t._v("#")]),t._v(" afterPlaceholderCreated")]),t._v(" "),e("ul",[e("li",[t._v("Type: (store: "),e("a",{attrs:{href:"#store"}},[t._v("Store")]),t._v(")")])]),t._v(" "),e("h2",{attrs:{id:"utils"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#utils"}},[t._v("#")]),t._v(" Utils")]),t._v(" "),e("h3",{attrs:{id:"clonetreedata-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#clonetreedata-2"}},[t._v("#")]),t._v(" cloneTreeData")]),t._v(" "),e("ul",[e("li",[t._v("Type: (treeData: "),e("a",{attrs:{href:"#treedata"}},[t._v("TreeData")]),t._v(", options: Object) => "),e("a",{attrs:{href:"#treedata"}},[t._v("TreeData")]),t._v(" "),e("ul",[e("li",[t._v("options\n"),e("ul",[e("li",[t._v("afterNodeCreated: (newNode, {oldNode: node, index, parent, path})")])])])])])]),t._v(" "),e("h3",{attrs:{id:"walktreedata-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#walktreedata-2"}},[t._v("#")]),t._v(" walkTreeData")]),t._v(" "),e("ul",[e("li",[t._v("Type: (treeData: "),e("a",{attrs:{href:"#treedata"}},[t._v("TreeData")]),t._v(", handler: Function, options)\n"),e("ul",[e("li",[t._v("handler: (node, index, parent, path)\n"),e("ul",[e("li",[t._v("return false: stop walk")]),t._v(" "),e("li",[t._v("return 'skip children'")]),t._v(" "),e("li",[t._v("return 'skip siblings'")])])]),t._v(" "),e("li",[t._v("options\n"),e("ul",[e("li",[t._v("{Boolean} reverse")])])])])]),t._v(" "),e("li",[t._v("Detail: Iterate TreeData.")])]),t._v(" "),e("h3",{attrs:{id:"getpuretreedata-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#getpuretreedata-2"}},[t._v("#")]),t._v(" getPureTreeData")]),t._v(" "),e("ul",[e("li",[t._v("Type: (treeData: "),e("a",{attrs:{href:"#treedata"}},[t._v("TreeData")]),t._v(") => "),e("a",{attrs:{href:"#puretreedata"}},[t._v("PureTreeData")])]),t._v(" "),e("li",[t._v("Type: (node: "),e("a",{attrs:{href:"#node"}},[t._v("Node")]),t._v(") => "),e("a",{attrs:{href:"#purenode"}},[t._v("PureNode")])])]),t._v(" "),e("h3",{attrs:{id:"foldall-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#foldall-2"}},[t._v("#")]),t._v(" foldAll")]),t._v(" "),e("ul",[e("li",[t._v("Type: (treeData: "),e("a",{attrs:{href:"#treedata"}},[t._v("TreeData")]),t._v(")")]),t._v(" "),e("li",[t._v("Detail: walk treeData and fold all. Make sure the data is reactive before do this.")])]),t._v(" "),e("h3",{attrs:{id:"unfoldall-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#unfoldall-2"}},[t._v("#")]),t._v(" unfoldAll")]),t._v(" "),e("ul",[e("li",[t._v("Type: (treeData: "),e("a",{attrs:{href:"#treedata"}},[t._v("TreeData")]),t._v(")")]),t._v(" "),e("li",[t._v("Detail: walk treeData and unfold all. Make sure the data is reactive before do this.")])]),t._v(" "),e("h2",{attrs:{id:"others"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#others"}},[t._v("#")]),t._v(" Others")]),t._v(" "),e("h2",{attrs:{id:"data-types"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#data-types"}},[t._v("#")]),t._v(" Data Types")]),t._v(" "),e("h3",{attrs:{id:"treedata-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#treedata-2"}},[t._v("#")]),t._v(" TreeData")]),t._v(" "),e("ul",[e("li",[t._v("Type: Array")]),t._v(" "),e("li",[t._v("Detail: Tree data.")]),t._v(" "),e("li",[t._v("Example: "),e("code",[t._v("[{text: 'node 1'}, {text: 'node 2', children: [{text: 'node 2-1'}]}]")])])]),t._v(" "),e("h3",{attrs:{id:"node"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#node"}},[t._v("#")]),t._v(" Node")]),t._v(" "),e("ul",[e("li",[t._v("Type: Object")]),t._v(" "),e("li",[t._v("Detail: Node data, "),e("code",[t._v("children")]),t._v(" is key of subtree, options key starts with "),e("code",[t._v("$")]),t._v(".")]),t._v(" "),e("li",[t._v("Example: "),e("code",[t._v("{text: 'node 2', children: [{text: 'node 2-1'}, $draggable: false]}")])])]),t._v(" "),e("h3",{attrs:{id:"puretreedata"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#puretreedata"}},[t._v("#")]),t._v(" PureTreeData")]),t._v(" "),e("ul",[e("li",[t._v("Type: Array")]),t._v(" "),e("li",[t._v("Detail: Pure tree data, without key starts with "),e("code",[t._v("$")]),t._v(".")])]),t._v(" "),e("h3",{attrs:{id:"purenode"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#purenode"}},[t._v("#")]),t._v(" PureNode")]),t._v(" "),e("ul",[e("li",[t._v("Type: Object")]),t._v(" "),e("li",[t._v("Detail: Pure node data, without key starts with "),e("code",[t._v("$")]),t._v(".")])]),t._v(" "),e("h3",{attrs:{id:"path"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#path"}},[t._v("#")]),t._v(" Path")]),t._v(" "),e("ul",[e("li",[t._v("Type: Array")]),t._v(" "),e("li",[t._v("Detail: Node position in TreeData. Starting from the highest second level, the serial number of each level in the parent.")]),t._v(" "),e("li",[t._v("Example: "),e("code",[t._v("[{text: 'node 1'}, {text: 'node 2', children: [{text: 'node 3'}]}]")]),t._v(", path of 'node 3' is [1, 0]")])]),t._v(" "),e("h3",{attrs:{id:"tree"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#tree"}},[t._v("#")]),t._v(" Tree")]),t._v(" "),e("ul",[e("li",[t._v("Detail: Vue instance(vm) of Tree.")])]),t._v(" "),e("h3",{attrs:{id:"store"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#store"}},[t._v("#")]),t._v(" Store")]),t._v(" "),e("ul",[e("li",[t._v("Type: Object\n"),e("ul",[e("li",[t._v("{HTMLElement} el: the moving el")]),t._v(" "),e("li",[t._v("{HTMLElement} originalEl: the original moving el, used when clone")]),t._v(" "),e("li",[t._v("{Object: {x, y}} mouse: the mouse position")]),t._v(" "),e("li",[t._v("{Number} movedCount: the moved times")]),t._v(" "),e("li",[t._v("{Event} startEvent: mousedown or touchstart event")]),t._v(" "),e("li",[t._v("{Event} endEvent: mouseup or touchend event")]),t._v(" "),e("li",[t._v("{HTMLElement} startTreeEl")]),t._v(" "),e("li",[t._v("{vm} startTree")]),t._v(" "),e("li",[t._v("{"),e("a",{attrs:{href:"#path"}},[t._v("Path")]),t._v("} startPath")]),t._v(" "),e("li",[t._v("{HTMLElement} dragBranchEl")]),t._v(" "),e("li",[t._v("{"),e("a",{attrs:{href:"#node"}},[t._v("Node")]),t._v("} dragNode")]),t._v(" "),e("li",[t._v("{HTMLElement} targetTreeEl")]),t._v(" "),e("li",[t._v("{vm} targetTree")]),t._v(" "),e("li",[t._v("{"),e("a",{attrs:{href:"#path"}},[t._v("Path")]),t._v("} targetPath")]),t._v(" "),e("li",[t._v("{Boolean} targetPathNotEqualToStartPath")]),t._v(" "),e("li",[t._v("{HTMLElement} placeholder")]),t._v(" "),e("li",[t._v("{Boolean} pathChangePrevented: if path change be prevented by hooks.")]),t._v(" "),e("li",[t._v("{Boolean} pathChanged: Whether the path changes in the end.")])])]),t._v(" "),e("li",[t._v("Detail: Related data during this dragging process. Created when drag start, destroyed when drag end. Also available through "),e("code",[t._v("tree.treesStore.store")]),t._v(".")])]),t._v(" "),e("h3",{attrs:{id:"isdraggable"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#isdraggable"}},[t._v("#")]),t._v(" IsDraggable")]),t._v(" "),e("ul",[e("li",[t._v("Type: [Boolean, undefined]\n"),e("ul",[e("li",[t._v("undefined: Inherit parent")])])]),t._v(" "),e("li",[t._v("Detail: Whether a single node is draggable.")])]),t._v(" "),e("h3",{attrs:{id:"isdroppable"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#isdroppable"}},[t._v("#")]),t._v(" IsDroppable")]),t._v(" "),e("ul",[e("li",[t._v("Type: [Boolean, undefined]\n"),e("ul",[e("li",[t._v("undefined: Inherit parent")])])]),t._v(" "),e("li",[t._v("Detail: Whether a single node is droppable.")])]),t._v(" "),e("h3",{attrs:{id:"jsx"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#jsx"}},[t._v("#")]),t._v(" JSX")]),t._v(" "),e("ul",[e("li",[t._v("Detail: "),e("a",{attrs:{href:"https://vuejs.org/v2/guide/render-function.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Vue JSX"),e("OutboundLink")],1),t._v(".")])]),t._v(" "),e("h2",{attrs:{id:"html-elements"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#html-elements"}},[t._v("#")]),t._v(" HTML Elements")]),t._v(" "),e("h3",{attrs:{id:"tree-children"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#tree-children"}},[t._v("#")]),t._v(" tree-children")]),t._v(" "),e("ul",[e("li",[t._v("Detail: List. The top has class "),e("code",[t._v("tree-root")]),t._v(".")])]),t._v(" "),e("h3",{attrs:{id:"tree-branch"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#tree-branch"}},[t._v("#")]),t._v(" tree-branch")]),t._v(" "),e("ul",[e("li",[t._v("Detail: The child of tree-children. Branch element, including tree-node and tree-children.")])]),t._v(" "),e("h3",{attrs:{id:"tree-node-back"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#tree-node-back"}},[t._v("#")]),t._v(" tree-node-back")]),t._v(" "),e("ul",[e("li",[t._v("Detail: The child of tree-branch. Node back element. The main role is to serve as the full-width background element of the node. You can set the full-width background color when hover through css. It has a padding-left that automatically calculates the indentation of the node.")])]),t._v(" "),e("h3",{attrs:{id:"tree-node"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#tree-node"}},[t._v("#")]),t._v(" tree-node")]),t._v(" "),e("ul",[e("li",[t._v("Detail: The child of tree-node-back. Node element, including default slot.")])])])}),[],!1,null,null,null);e.default=s.exports}}]);